{
	"info": {
		"_postman_id": "f4603a29-4630-4988-ad65-2e13d4bd964b",
		"name": "Trello App",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Create Board",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var response = pm.response.json();",
							"",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.environment.set(\"board_id\", response.id);",
							"pm.environment.set(\"board_name\", response.name);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "https://api.trello.com/1/boards/?key={{key}}&token={{token}}&name=vildanin board",
					"protocol": "https",
					"host": [
						"api",
						"trello",
						"com"
					],
					"path": [
						"1",
						"boards",
						""
					],
					"query": [
						{
							"key": "key",
							"value": "{{key}}"
						},
						{
							"key": "token",
							"value": "{{token}}"
						},
						{
							"key": "name",
							"value": "vildanin board"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Create a new List Mobitel",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var response = pm.response.json();",
							"",
							"pm.environment.set(\"list_id_mobitel\", response.id);",
							"",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Name of a list should be \", function () {",
							"    pm.expect(response.name).to.eql(\"mobitel\");",
							"});",
							"",
							"pm.test(\"ID of a board should be\", function () {",
							"    pm.expect(response.idBoard).to.eql(pm.environment.get(\"board_id\"));",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "https://api.trello.com/1/lists?key={{key}}&token={{token}}&idBoard={{board_id}}&name=mobitel",
					"protocol": "https",
					"host": [
						"api",
						"trello",
						"com"
					],
					"path": [
						"1",
						"lists"
					],
					"query": [
						{
							"key": "key",
							"value": "{{key}}"
						},
						{
							"key": "token",
							"value": "{{token}}"
						},
						{
							"key": "idBoard",
							"value": "{{board_id}}"
						},
						{
							"key": "name",
							"value": "mobitel"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Create a new List Frizider",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var response = pm.response.json();",
							"",
							"pm.environment.set(\"list_id_frizider\", response.id);",
							"",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Name of a list should be \", function () {",
							"    pm.expect(response.name).to.eql(\"frizider\");",
							"});",
							"",
							"pm.test(\"ID of a board should be\", function () {",
							"    pm.expect(response.idBoard).to.eql(pm.environment.get(\"board_id\"));",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "https://api.trello.com/1/lists?key={{key}}&token={{token}}&idBoard={{board_id}}&name=frizider",
					"protocol": "https",
					"host": [
						"api",
						"trello",
						"com"
					],
					"path": [
						"1",
						"lists"
					],
					"query": [
						{
							"key": "key",
							"value": "{{key}}"
						},
						{
							"key": "token",
							"value": "{{token}}"
						},
						{
							"key": "idBoard",
							"value": "{{board_id}}"
						},
						{
							"key": "name",
							"value": "frizider"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Create new card",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var response =  pm.response.json();",
							"",
							"pm.environment.set(\"card_name\", response.name);",
							"pm.environment.set(\"card_id\", response.id);",
							"",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Name of a card should be \", function () {",
							"    pm.expect(response.name).to.eql(\"Laptop\");",
							"});",
							"",
							"pm.test(\"ID of a board should be\", function () {",
							"    pm.expect(response.idBoard).to.eql(pm.environment.get(\"board_id\"));",
							"});",
							"",
							"pm.test(\"ID of a list should be\", function () {",
							"    pm.expect(response.idList).to.eql(pm.environment.get(\"list_id_mobitel\"));",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "https://api.trello.com/1/cards?key={{key}}&token={{token}}&idList={{list_id_mobitel}}&name=Laptop",
					"protocol": "https",
					"host": [
						"api",
						"trello",
						"com"
					],
					"path": [
						"1",
						"cards"
					],
					"query": [
						{
							"key": "key",
							"value": "{{key}}"
						},
						{
							"key": "token",
							"value": "{{token}}"
						},
						{
							"key": "idList",
							"value": "{{list_id_mobitel}}"
						},
						{
							"key": "name",
							"value": "Laptop"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Add member to a board",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var response = pm.response.json();",
							"",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"ID of the board should be \" + response.id, function () {",
							"    pm.expect(response.id).to.eql(pm.environment.get(\"board_id\"));",
							"});",
							"",
							"var duzina;",
							"pm.test(\"Number of users\", function() {",
							"    duzina = response.members.length;",
							"});",
							"console.log(\"Number of users: \" + duzina);",
							"",
							"//member id",
							"for (let i = 0; i < duzina; i++) {",
							"    pm.test(response.members[i].id, function () {",
							"        pm.expect(response.members[i].id).to.be.oneOf([pm.environment.get(\"anidas_id\"),pm.environment.get(\"vildanas_id\")]);",
							"        if(true) {",
							"            console.log(\"Exists user with \" + response.members[i].id + \" ID\")",
							"        }",
							"    });",
							"}",
							"",
							"//username",
							"for (let i = 0; i < duzina; i++) {",
							"    pm.test(response.members[i].username, function () {",
							"        pm.expect(response.members[i].username).to.be.oneOf([\"anidamusinovic\", \"vildana28\"]);",
							"        if(true) {",
							"            console.log(\"Exists user with \" + response.members[i].username + \" ID\")",
							"        }",
							"    });",
							"}"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"url": {
					"raw": "https://api.trello.com/1/boards/{{board_id}}/members/{{anidas_id}}?key={{key}}&token={{token}}&type=normal&idMember={{anidas_id}} {{vildanas_id}}",
					"protocol": "https",
					"host": [
						"api",
						"trello",
						"com"
					],
					"path": [
						"1",
						"boards",
						"{{board_id}}",
						"members",
						"{{anidas_id}}"
					],
					"query": [
						{
							"key": "key",
							"value": "{{key}}"
						},
						{
							"key": "token",
							"value": "{{token}}"
						},
						{
							"key": "type",
							"value": "normal"
						},
						{
							"key": "idMember",
							"value": "{{anidas_id}} {{vildanas_id}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Add member to a card",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var response = pm.response.json();",
							"",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Name of a card should be \" + pm.environment.get(\"card_name\"), function () {",
							"    console.log(pm.environment.get(\"card_name\"));",
							"});",
							"",
							"pm.test(\"ID of a member should be \" + response[0].id, function () {",
							"    pm.expect(response[0].id).to.eql(pm.environment.get(\"anidas_id\"));",
							"});",
							"",
							"pm.test(\"Username of a member should be \" + response[0].username, function () {",
							"    pm.expect(response[0].username).to.eql(\"anidamusinovic\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "https://api.trello.com/1/cards/{{card_id}}/idMembers?key={{key}}&token={{token}}&id={{card_id}}&value={{anidas_id}}",
					"protocol": "https",
					"host": [
						"api",
						"trello",
						"com"
					],
					"path": [
						"1",
						"cards",
						"{{card_id}}",
						"idMembers"
					],
					"query": [
						{
							"key": "key",
							"value": "{{key}}"
						},
						{
							"key": "token",
							"value": "{{token}}"
						},
						{
							"key": "id",
							"value": "{{card_id}}"
						},
						{
							"key": "value",
							"value": "{{anidas_id}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Move card to another list",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var response =  pm.response.json();",
							"",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Name of a card should be \", function () {",
							"    pm.expect(response.name).to.eql(\"Laptop\");",
							"});",
							"",
							"pm.test(\"ID of a board should be\", function () {",
							"    pm.expect(response.idBoard).to.eql(pm.environment.get(\"board_id\"));",
							"});",
							"",
							"pm.test(\"New list's ID is\", function() {",
							"    pm.expect(response.idList).to.eql(pm.environment.get(\"list_id_frizider\"));",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"url": {
					"raw": "https://api.trello.com/1/cards/{{card_id}}?key={{key}}&token={{token}}&idList={{list_id_frizider}}&id={{card_id}}",
					"protocol": "https",
					"host": [
						"api",
						"trello",
						"com"
					],
					"path": [
						"1",
						"cards",
						"{{card_id}}"
					],
					"query": [
						{
							"key": "key",
							"value": "{{key}}"
						},
						{
							"key": "token",
							"value": "{{token}}"
						},
						{
							"key": "idList",
							"value": "{{list_id_frizider}}"
						},
						{
							"key": "id",
							"value": "{{card_id}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete a card",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var response =  pm.response.json();",
							"",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Card deleted!\", function() {",
							"    pm.expect(response.limits).to.be.empty;",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "urlencoded",
					"urlencoded": []
				},
				"url": {
					"raw": "https://api.trello.com/1/cards/{{card_id}}?key={{key}}&token={{token}}&id={{card_id}}",
					"protocol": "https",
					"host": [
						"api",
						"trello",
						"com"
					],
					"path": [
						"1",
						"cards",
						"{{card_id}}"
					],
					"query": [
						{
							"key": "key",
							"value": "{{key}}"
						},
						{
							"key": "token",
							"value": "{{token}}"
						},
						{
							"key": "id",
							"value": "{{card_id}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete board",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var response =  pm.response.json();",
							"",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Board deleted!\", function() {",
							"    pm.expect(response._value).to.be.null;",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "https://api.trello.com/1/boards/{{board_id}}?key={{key}}&token={{token}}",
					"protocol": "https",
					"host": [
						"api",
						"trello",
						"com"
					],
					"path": [
						"1",
						"boards",
						"{{board_id}}"
					],
					"query": [
						{
							"key": "key",
							"value": "{{key}}"
						},
						{
							"key": "token",
							"value": "{{token}}"
						}
					]
				}
			},
			"response": []
		}
	]
}